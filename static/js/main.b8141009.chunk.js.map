{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","isValidLink","hasTitleError","hasImgUrlError","hasImdbUrlError","hasImdbIdError","handleTitleChange","event","setState","target","value","handleDescriptionChange","handleImgUrlChange","handleImdbUrlChange","handleImdbIdChange","isValidTitle","linkCheck","url","match","isValidImgUrl","correctImgUrl","isValidImdbUrl","correctImdbUrl","isValidImdbId","validateForm","clearState","handleSubmit","preventDefault","newMovie","props","onAdd","this","onSubmit","name","type","placeholder","onChange","onBlur","classNames","invalid","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8141009.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  isValidLink: boolean,\n  hasTitleError: boolean,\n  hasImgUrlError: boolean,\n  hasImdbUrlError: boolean,\n  hasImdbIdError: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isValidLink: true,\n    hasTitleError: false,\n    hasImgUrlError: false,\n    hasImdbUrlError: false,\n    hasImdbIdError: false,\n  };\n\n  handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      title: event.target.value,\n      hasTitleError: false,\n    });\n  };\n\n  handleDescriptionChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({\n      description: event.target.value,\n    });\n  };\n\n  handleImgUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imgUrl: event.target.value,\n      hasImgUrlError: false,\n    });\n  };\n\n  handleImdbUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imdbUrl: event.target.value,\n      hasImdbUrlError: false,\n    });\n  };\n\n  handleImdbIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imdbId: event.target.value,\n      hasImdbIdError: false,\n    });\n  };\n\n  isValidTitle = () => {\n    const { title } = this.state;\n\n    if (!title) {\n      this.setState({ hasTitleError: !title });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  linkCheck = (url: string) => {\n    return url.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n  };\n\n  isValidImgUrl = () => {\n    const { imgUrl } = this.state;\n    const correctImgUrl = imgUrl && this.linkCheck(imgUrl);\n\n    if (!correctImgUrl) {\n      this.setState({ hasImgUrlError: !correctImgUrl });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  isValidImdbUrl = () => {\n    const { imdbUrl } = this.state;\n    const correctImdbUrl = imdbUrl && this.linkCheck(imdbUrl);\n\n    if (!correctImdbUrl) {\n      this.setState({ hasImdbUrlError: !correctImdbUrl });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  isValidImdbId = () => {\n    const { imdbId } = this.state;\n\n    if (!imdbId) {\n      this.setState({ hasImdbIdError: !imdbId });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateForm = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (!title || !description || !imgUrl || !imdbUrl || !imdbId) {\n      this.setState({\n        hasTitleError: !title,\n        hasImgUrlError: !imgUrl,\n        hasImdbUrlError: !imdbUrl,\n        hasImdbIdError: !imdbId,\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      hasTitleError: false,\n      hasImgUrlError: false,\n      hasImdbUrlError: false,\n      hasImdbIdError: false,\n    });\n  };\n\n  handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const isFormValid = this.validateForm();\n\n    if (isFormValid) {\n      const newMovie = {\n        title: this.state.title,\n        description: this.state.description,\n        imgUrl: this.state.imgUrl,\n        imdbId: this.state.imdbId,\n        imdbUrl: this.state.imdbUrl,\n      };\n\n      this.props.onAdd(newMovie);\n      this.clearState();\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n      isValidLink,\n      hasTitleError,\n      hasImgUrlError,\n      hasImdbUrlError,\n      hasImdbIdError,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"title\"\n          value={title}\n          className=\"input\"\n          onChange={this.handleTitleChange}\n          onBlur={this.isValidTitle}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please, enter a title</span>\n        )}\n\n        <textarea\n          name=\"description\"\n          value={description}\n          className=\"textarea\"\n          placeholder=\"description\"\n          onChange={this.handleDescriptionChange}\n        />\n\n        <input\n          name=\"imgUrl\"\n          type=\"text\"\n          className={classNames('input', { invalid: !isValidLink })}\n          value={imgUrl}\n          placeholder=\"imgUrl\"\n          onChange={this.handleImgUrlChange}\n          onBlur={this.isValidImgUrl}\n        />\n\n        {hasImgUrlError && (\n          <span className=\"error\">Please, enter a valid imgUrl</span>\n        )}\n\n        <input\n          name=\"imdbUrl\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleImdbUrlChange}\n          onBlur={this.isValidImdbUrl}\n        />\n\n        {hasImdbUrlError && (\n          <span className=\"error\">Please, enter a valid imdbUrl</span>\n        )}\n\n        <input\n          name=\"imdbId\"\n          type=\"text\"\n          placeholder=\"imdbId\"\n          className=\"input\"\n          value={imdbId}\n          onChange={this.handleImdbIdChange}\n          onBlur={this.isValidImdbId}\n        />\n\n        {hasImdbIdError && (\n          <span className=\"error\">Please, enter a valid imdbId</span>\n        )}\n\n        <button\n          name=\"button\"\n          type=\"submit\"\n          className=\"button is-success\"\n          disabled={\n            hasTitleError\n            || hasImgUrlError\n            || hasImdbUrlError\n            || hasImdbIdError\n          }\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}