{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","hasTitleError","hasImgUrlError","hasImdbUrlError","hasImdbIdError","hasError","name","ErrorName","toUpperCase","slice","handleChange","event","target","value","errorName","setState","validateForm","clearState","handleSubmit","preventDefault","newMovie","props","onAdd","this","onSubmit","type","placeholder","onChange","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.276dfd91.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  hasTitleError: boolean,\n  hasImgUrlError: boolean,\n  hasImdbUrlError: boolean,\n  hasImdbIdError: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    hasTitleError: false,\n    hasImgUrlError: false,\n    hasImdbUrlError: false,\n    hasImdbIdError: false,\n  };\n\n  hasError = (name: string) => {\n    const ErrorName = name[0].toUpperCase() + name.slice(1);\n\n    return `has${ErrorName}Error`;\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n    const errorName = this.hasError(name);\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n      [errorName]: false,\n    }));\n  };\n\n  validateForm = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (!title || !description || !imgUrl || !imdbUrl || !imdbId) {\n      this.setState({\n        hasTitleError: !title,\n        hasImgUrlError: !imgUrl,\n        hasImdbUrlError: !imdbUrl,\n        hasImdbIdError: !imdbId,\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      hasTitleError: false,\n      hasImgUrlError: false,\n      hasImdbUrlError: false,\n      hasImdbIdError: false,\n    });\n  };\n\n  handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const isFormValid = this.validateForm();\n\n    if (isFormValid) {\n      const newMovie = {\n        title: this.state.title,\n        description: this.state.description,\n        imgUrl: this.state.imgUrl,\n        imdbId: this.state.imdbId,\n        imdbUrl: this.state.imdbUrl,\n      };\n\n      this.props.onAdd(newMovie);\n      this.clearState();\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n      hasTitleError,\n      hasImgUrlError,\n      hasImdbUrlError,\n      hasImdbIdError,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"title\"\n          value={title}\n          className=\"input\"\n          onChange={this.handleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please, enter a title</span>\n        )}\n\n        <textarea\n          name=\"description\"\n          value={description}\n          className=\"textarea\"\n          placeholder=\"description\"\n          onChange={this.handleChange}\n        />\n\n        <input\n          name=\"imgUrl\"\n          type=\"text\"\n          className=\"input\"\n          value={imgUrl}\n          placeholder=\"imgUrl\"\n          onChange={this.handleChange}\n        />\n\n        {hasImgUrlError && (\n          <span className=\"error\">Please, enter a imgUrl</span>\n        )}\n\n        <input\n          name=\"imdbUrl\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n        />\n\n        {hasImdbUrlError && (\n          <span className=\"error\">Please, enter a imdbUrl</span>\n        )}\n\n        <input\n          name=\"imdbId\"\n          type=\"text\"\n          placeholder=\"imdbId\"\n          className=\"input\"\n          value={imdbId}\n          onChange={this.handleChange}\n        />\n\n        {hasImdbIdError && (\n          <span className=\"error\">Please, enter a imdbId</span>\n        )}\n\n        <button\n          name=\"button\"\n          type=\"submit\"\n          className=\"button is-success\"\n          disabled={\n            hasTitleError\n            || hasImgUrlError\n            || hasImdbUrlError\n            || hasImdbIdError\n          }\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}